var L=Object.defineProperty;var E=(o,e,t)=>e in o?L(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var a=(o,e,t)=>(E(o,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();let M;const k=new Uint8Array(16);function I(){if(!M&&(M=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!M))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return M(k)}const d=[];for(let o=0;o<256;++o)d.push((o+256).toString(16).slice(1));function O(o,e=0){return d[o[e+0]]+d[o[e+1]]+d[o[e+2]]+d[o[e+3]]+"-"+d[o[e+4]]+d[o[e+5]]+"-"+d[o[e+6]]+d[o[e+7]]+"-"+d[o[e+8]]+d[o[e+9]]+"-"+d[o[e+10]]+d[o[e+11]]+d[o[e+12]]+d[o[e+13]]+d[o[e+14]]+d[o[e+15]]}const D=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),T={randomUUID:D};function X(o,e,t){if(T.randomUUID&&!e&&!o)return T.randomUUID();o=o||{};const s=o.random||(o.rng||I)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,e){t=t||0;for(let i=0;i<16;++i)e[t+i]=s[i];return e}return O(s)}const g={Fixed:"fixed",Guessed:"guess",Hinted:"hinted"},m={Board:"board",Input:"input",Memo:"memo"};class x{constructor(e,t,s){a(this,"id");a(this,"x");a(this,"y");a(this,"memo");a(this,"originValue");a(this,"guessValue");a(this,"state",g.Guessed);a(this,"type",m.Board);a(this,"isGuessPassed",!0);a(this,"isSuccess",!1);a(this,"amount",9);a(this,"current",9);this.id="cell-"+X(),this.x=e,this.y=t,this.memo=[],this.originValue=s||0,this.guessValue=0,this.stateGuessed(),this.typeBoard()}count(){this.current>0&&(this.current-=1)}clear(){this.current=9}typeBoard(){this.type=m.Board}typeInput(){this.type=m.Input}typeMemo(){this.type=m.Memo}isTypeBoard(){return m.Board}isTypeMemo(){return m.Memo}isTypeInput(){return m.Input}stateFixed(){this.state=g.Fixed,this.guessValue=this.originValue}stateGuessed(){this.state=g.Guessed}stateHinted(){this.state=g.Hinted}isStateFixed(){return this.state===g.Fixed}isStateGuessed(){return this.state===g.Guessed}isStateHinted(){return this.state===g.Hinted}guessValuePassed(){this.isGuessPassed=!0}guessValueNotPassed(){this.isGuessPassed=!1}isMatchedWithOrigin(){return this.guessValue===this.originValue}replaceGuessValue(e){this.guessValue=e}removeGuessValue(){this.guessValue=0}addMemo(e){this.memo.includes(e)?this.removeMemo(e):this.memo.push(e)}removeMemo(e){this.memo.splice(this.memo.indexOf(e),1)}removeAllMemo(){this.memo=[]}readGuessValue(){return""+(this.state===g.Fixed?this.originValue:this.guessValue||"")}readButtonValue(){switch(this.type){case m.Board:return""+this.guessValue;case m.Memo:return"✍️";case m.Input:return""+(this.guessValue===0?"❌":this.guessValue)}}readMemo(){return this.memo.toSorted((e,t)=>e-t)}hasMemoBy(e){return this.memo.includes(e)}success(){this.isSuccess=!0}}const b={0:"처음하는 사람",1:"초급자",2:"중급자",3:"고급자"},V=o=>{const e=Math.floor(o/60/60%60).toString().padStart(2,"0"),t=Math.floor(o/60%60).toString().padStart(2,"0"),s=Math.floor(o%60).toString().padStart(2,"0");return`${e}:${t}:${s}`};class Y{constructor(){a(this,"score");a(this,"playTime");a(this,"firstCorrectTime");a(this,"firstFailureTime");a(this,"pauseAmount");this.score=0,this.playTime=0,this.firstCorrectTime=0,this.firstFailureTime=0,this.pauseAmount=0}}class ${constructor(e){a(this,"parent");a(this,"memoCell");a(this,"inputs",[]);a(this,"resetQueue",[]);a(this,"memoMode",!1);a(this,"activeValue",0);this.activeValue=1,this.parent=e,this.memoCell=new x(10,-1,-1),this.memoCell.typeMemo();const t=new x(10,0,0);t.typeInput(),this.inputs.push(t);for(let s=0;s<this.parent.sizes.y;s++){const i=new x(10,s,s+1);i.stateFixed(),i.typeInput(),this.inputs.push(i)}window.addEventListener("keydown",this.handleKeydown.bind(this)),window.addEventListener("mousemove",this.handlePointer.bind(this)),window.addEventListener("click",this.handleClick.bind(this))}clearCount(){const e=t=>t.clear();this.inputs.forEach(e)}getPos(e){const t=this.parent.renderer.canvas.width*.5,s=this.parent.renderer.canvas.height*this.parent.offsetTop,i=this.parent.sizes.x*this.parent.renderer.size*.5,r=this.parent.sizes.y*this.parent.renderer.size*this.parent.offsetTop,n=Math.floor((e.clientX-t+i)/this.parent.renderer.size),l=Math.floor((e.clientY-s+r-this.parent.offsetTopPx)/this.parent.renderer.size);return{x:n,y:l}}toggleMemoMode(){this.memoMode=!this.memoMode}calculateAndRerenderInputs(){this.parent.calculateEachValueAmount(),this.parent.renderer.renderInputs()}handleKeydown(e){if(this.activeValue===0||!this.parent.isStateRun())return;const t=e.key.toLowerCase();if(!(this.parent.isGameClear()||this.parent.isGameFail())&&this.parent.selected&&this.parent.selected.isStateGuessed())if(t==="backspace")this.memoMode?(this.parent.selected.removeGuessValue(),this.parent.selected.removeAllMemo(),this.validateGuessValue(this.parent.selected),this.parent.selected=null):(this.parent.selected.removeGuessValue(),this.parent.selected.removeAllMemo(),this.validateGuessValue(this.parent.selected),this.parent.selected=null),this.calculateAndRerenderInputs();else if(t.match(/^[1-9]$/))if(this.memoMode){const s=this.inputs.find(i=>i.guessValue===+t);(s==null?void 0:s.current)!==0&&(this.parent.selected.addMemo(+t),this.parent.selected.removeGuessValue(),this.calculateAndRerenderInputs())}else{const s=this.inputs.find(i=>i.guessValue===+t);(s==null?void 0:s.current)!==0&&(this.parent.selected.replaceGuessValue(+t),this.parent.selected.removeAllMemo(),this.calculateAndRerenderInputs(),this.validateGuessValue(this.parent.selected),this.parent.selected=null)}else t.match(/^0$/)&&(this.memoMode?(this.parent.selected.removeGuessValue(),this.parent.selected.removeAllMemo(),this.calculateAndRerenderInputs(),this.validateGuessValue(this.parent.selected),this.parent.selected=null):(this.parent.selected.removeGuessValue(),this.parent.selected.removeAllMemo(),this.calculateAndRerenderInputs(),this.validateGuessValue(this.parent.selected),this.parent.selected=null))}handlePointer(e){if(this.activeValue===0||!this.parent.isStateRun())return;const t=this.getPos(e);this.parent.renderer.pointer=t}handleClick(e){const t=this.getPos(e),s=e.target;if(!(this.parent.isGameClear()||this.parent.isGameFail())){if(s.id==="game-level"){this.parent.askSetLevel()&&this.parent.restartGame();return}if(s.id==="game-state"){this.parent.resumeOrpause();return}if(s.id==="game-restart"){this.parent.restartGame();return}if(s.id==="game-hinting"){this.parent.showHint();return}if(!(this.activeValue===0||!this.parent.isStateRun()))if(s.tagName!=="button"&&0<=t.x&&t.x<this.parent.sizes.x&&0<=t.y&&t.y<this.parent.sizes.y){const i=this.parent.selectOne(t.x,t.y);this.parent.selected=i??null}else{const i=e.target;if(!i)return;if(i.dataset.value==="-1")this.toggleMemoMode(),this.parent.renderer.renderInputs();else if(this.parent.selected&&this.parent.selected.isStateGuessed()){const r=Number(i.dataset.value);if(!Number.isNaN(r)&&r>0){if(this.memoMode){const n=this.inputs[r];n.originValue===0?this.parent.selected.removeAllMemo():this.parent.selected.addMemo(n.originValue),this.parent.selected.removeGuessValue(),this.calculateAndRerenderInputs()}else{const n=this.inputs[r];n.originValue===0?this.parent.selected.removeGuessValue():(this.parent.selected.replaceGuessValue(n.originValue),this.calculateAndRerenderInputs()),this.parent.selected.removeAllMemo()}this.validateGuessValue(this.parent.selected)}else this.parent.selected.removeGuessValue(),this.parent.selected.removeAllMemo(),this.calculateAndRerenderInputs(),this.validateGuessValue(this.parent.selected)}(!this.memoMode||!("value"in i.dataset))&&(this.parent.selected=null)}}}clearWrongCell(){this.parent.wrongCell!==null&&(this.parent.wrongCell=null,this.parent.boards.flat(1).forEach(e=>{e.isSuccess=!1}))}validateGuessValue(e){this.clearWrongCell();const{isCorrect:t,row:s,isRowFill:i,column:r,isColumnFill:n,box:l,isBoxFill:c}=this.parent.guessByCell(e);if(t){this.parent.currentHistory&&this.parent.currentHistory.firstCorrectTime===0&&(this.parent.currentHistory.firstCorrectTime=this.parent.timer),e.guessValuePassed();for(const h of this.resetQueue)h.isSuccess=!1;for(;this.parent.renderer.timeoutQueue.length>0;){const h=this.parent.renderer.timeoutQueue.shift();if(h){const[p,y]=h;clearTimeout(p),y()}}i&&s.forEach(h=>{h.guessValuePassed(),h.success(),this.resetQueue.push(h)}),n&&r.forEach(h=>{h.guessValuePassed(),h.success(),this.resetQueue.push(h)}),c&&l.forEach(h=>{h.guessValuePassed(),h.success(),this.resetQueue.push(h)})}else this.memoMode||(this.parent.currentHistory&&this.parent.currentHistory.firstFailureTime===0&&(this.parent.currentHistory.firstFailureTime=this.parent.timer),console.warn("[not correct]"),e.guessValueNotPassed(),this.parent.tryFailCount(),this.parent.wrongCell=e);this.parent.checkGameClear()}}const u={White:"#ffffff",Default:"#565656",DefaultText:"#565656",DefaultBorder:"#56565656",BoxBorder:"#acacac",Selected:"#a625c576",Success:"#248d2e16",SameGuessValue:"#a625c536",Pointer:"#a625c556",Correct:"#248d2e",Danger:"#bb3636",DangerPointHighlight:"#bb363676",DangerHighlight:"#bb363636",LineHighlight:"#a625c516"};class W{constructor(e){a(this,"parent");a(this,"canvas");a(this,"ctx");a(this,"size",50);a(this,"pointer",{x:-1,y:-1});a(this,"selected",{x:-1,y:-1});a(this,"beforeTime",0);a(this,"inputPlace","right");a(this,"timeoutQueue",[]);a(this,"activeValue",0);const t=document.querySelector("#app"),s=t.getContext("2d");this.parent=e,this.canvas=t,this.ctx=s,this.execListener()}renderEndHistory(e){const t=`- Solved Level:
`+b[this.parent.level],s=`- Play Time:
`+V(e.playTime),i=`- First Correct Time:
`+V(e.firstCorrectTime),r=`- First Failure Time:
`+V(e.firstFailureTime),n=`- Pause Amount:
`+e.pauseAmount,l=`- Used Hints:
`+(5-this.parent.hints);alert(`# Sudoku Result!


${t}

${s}

${i}

${r}

${n}

${l}`)}playButtonToggle(e){const t=document.querySelector("#game-state"),s=document.querySelector("#page");e==="running"?(t.dataset.value="running",s.dataset.hidden="true"):e==="hold"&&(t.dataset.value="hold",s.dataset.hidden="false")}updateHint(){const e=document.querySelector("#game-hinting");e&&(e.dataset.amount=""+this.parent.hints,this.parent.hints===0&&(e.disabled=!0))}destroy(){this.pointer={x:-1,y:-1},this.selected={x:-1,y:-1},cancelAnimationFrame(this.activeValue)}getGlobalSize(){const e=this.canvas.width*.5,t=this.canvas.height*this.parent.offsetTop,s=this.parent.boards[0].length*this.size*.5,i=this.parent.boards.length*this.size*this.parent.offsetTop;return{centerX:e,centerY:t,boardX:s,boardY:i}}execListener(){this.handleResizeCanvas(),window.addEventListener("resize",this.handleResizeCanvas.bind(this))}maxOr(e){return innerWidth<e}minOr(e){return e<=innerWidth}minAndMax(e,t){return e<=innerWidth&&innerWidth<t}handleResizeCanvas(e){this.canvas.width=innerWidth,this.canvas.height=innerHeight;const t=innerHeight/innerWidth;this.minOr(1268)?(this.size=50*1.2,this.inputPlace="right"):this.minAndMax(1024,1268)?(this.size=50/t*.7,this.inputPlace="right"):this.minAndMax(768,1024)?(this.size=46,this.inputPlace="right"):this.minAndMax(568,768)?(this.size=42,this.inputPlace="right"):this.minAndMax(368,568)?(this.size=34,this.inputPlace="right"):this.maxOr(368)?(this.size=30,this.inputPlace="right"):(this.size=56,this.inputPlace="right")}drawCell(e){var C,w;const{centerX:t,centerY:s,boardX:i,boardY:r}=this.getGlobalSize(),{x:n,y:l}=e,c=n*this.size+t-i,h=l*this.size+s-r+this.parent.offsetTopPx,p=e.readGuessValue(),y=e.readMemo();if(this.ctx.fillStyle=u.White,e.isSuccess&&(this.ctx.fillStyle=u.Success),((C=this.parent.selected)==null?void 0:C.x)===e.x&&((w=this.parent.selected)==null?void 0:w.y)===e.y&&(this.ctx.fillStyle=u.Selected),this.parent.selected&&this.parent.selected.guessValue===e.guessValue&&e.guessValue!==0&&(this.ctx.fillStyle=u.SameGuessValue),this.ctx.fillRect(c,h,this.size,this.size),this.ctx.textAlign="center",e.isStateFixed()?this.ctx.fillStyle=u.Default:e.isGuessPassed?this.ctx.fillStyle=u.Correct:this.ctx.fillStyle=u.Danger,this.ctx.strokeStyle=u.DefaultBorder,this.ctx.strokeRect(c,h,this.size,this.size),y.length>0){const v=this.parent.selected&&e.hasMemoBy(this.parent.selected.guessValue);v&&(this.ctx.fillStyle=u.SameGuessValue,this.ctx.fillRect(c,h,this.size,this.size),this.ctx.strokeRect(c,h,this.size,this.size)),this.ctx.font="bold 8px san-serif",v&&(this.ctx.fillStyle=u.DefaultText);const B=Math.max(innerWidth,innerHeight),P=Math.min(innerWidth,innerHeight),G=B/P,z=this.size*.1*G;y.forEach((R,S)=>{const{actualBoundingBoxAscent:F}=this.ctx.measureText(""+R);this.ctx.fillText(""+R,c+z*(S%3)+(this.size/2-z),h+10/F*G*Math.floor(S/3)+z*Math.floor(S/3)+(this.size/2-z))})}else{this.ctx.font="bold 16px san-serif";const{actualBoundingBoxAscent:v}=this.ctx.measureText(p);this.ctx.fillText(p,c+this.size/2,h+this.size/2+v/2)}}splitBy(e,t){const s=[];for(let i=1;i<=t;i++){const r=e.slice((i-1)*t,i*t);s.push(r)}return s}createButtonGroup(...e){const t=document.createElement("div");return t.classList.add("btn-group"),t.append(...e),t}renderInputs(){const e=document.body,t=document.querySelector("#inputs");t.innerHTML="";const s=this.convertButtonEl(this.parent.inputManager.memoCell);this.parent.inputManager.memoMode?s.classList.add("memomode"):s.classList.remove("memomode");const i=this.convertButtonEl(this.parent.inputManager.inputs[0]);t.append(this.createButtonGroup(s,i)),this.splitBy(this.parent.inputManager.inputs.slice(1).map(r=>this.convertButtonEl(r)),3).forEach(r=>{t.append(this.createButtonGroup(...r))}),e.append(t)}convertButtonEl(e){const t=e.readButtonValue(),s=document.createElement("button");return!this.parent.inputManager.memoMode&&e.isTypeBoard()&&e.current===0&&(s.disabled=!0),s.innerText=t,e.isTypeInput()?s.dataset.value=""+e.originValue:e.isTypeMemo()&&(s.dataset.value="memo"),s}drawCellInputs(){const{centerX:e,centerY:t,boardX:s,boardY:i}=this.getGlobalSize();for(const r of this.parent.inputManager.inputs){const n=this.inputPlace==="right"?10*this.size+e-s:r.y*this.size+e-s+Math.floor(r.y/6)*-this.size,l=this.inputPlace==="right"?r.y*this.size+t-i:10*this.size+t-i+Math.floor(r.y/6)*this.size+this.parent.offsetTopPx,c=""+(r.guessValue===0?"X":r.guessValue);this.ctx.font="bold 16px san-serif",this.ctx.textAlign="center",this.ctx.strokeStyle=u.DefaultBorder,this.pointer.x===10&&this.pointer.y===r.y?this.ctx.fillStyle=u.Pointer:this.ctx.fillStyle=u.White,this.ctx.fillRect(n,l,this.size,this.size);const{actualBoundingBoxAscent:h}=this.ctx.measureText(c);this.ctx.strokeRect(n,l,this.size,this.size),this.ctx.fillStyle=u.DefaultText,this.ctx.fillText(c,n+this.size/2,l+this.size/2+h/2+this.parent.offsetTopPx)}}drawGuideline(e,t){const{centerX:s,centerY:i,boardX:r,boardY:n}=this.getGlobalSize(),l=h=>h*this.size+s-r,c=h=>h*this.size+i-n+this.parent.offsetTopPx;this.ctx.fillStyle=t,this.ctx.fillRect(l(0),c(e.y),this.size*e.x,this.size),this.ctx.fillRect((e.x+1)*this.size+s-r,c(e.y),this.size*(this.parent.sizes.x-(e.x+1)),this.size),this.ctx.fillRect(l(e.x),c(0),this.size,this.size*e.y),this.ctx.fillRect(l(e.x),c(e.y+1),this.size,this.size*(this.parent.sizes.y-(e.y+1))),this.ctx.fillStyle=t===u.DangerHighlight?u.DangerPointHighlight:u.Pointer,this.ctx.fillRect(l(e.x),c(e.y),this.size,this.size)}drawBoxBorder(){const{centerX:e,centerY:t,boardX:s,boardY:i}=this.getGlobalSize(),r=l=>l*3*this.size+e-s,n=l=>l*3*this.size+t-i+this.parent.offsetTopPx;this.ctx.save(),this.ctx.lineWidth=3,this.ctx.strokeStyle=u.BoxBorder,this.ctx.strokeRect(r(0),n(0),this.size*3,this.size*3),this.ctx.strokeRect(r(0),n(1),this.size*3,this.size*3),this.ctx.strokeRect(r(0),n(2),this.size*3,this.size*3),this.ctx.strokeRect(r(1),n(0),this.size*3,this.size*3),this.ctx.strokeRect(r(1),n(1),this.size*3,this.size*3),this.ctx.strokeRect(r(1),n(2),this.size*3,this.size*3),this.ctx.strokeRect(r(2),n(2),this.size*3,this.size*3),this.ctx.strokeRect(r(2),n(1),this.size*3,this.size*3),this.ctx.strokeRect(r(2),n(0),this.size*3,this.size*3),this.ctx.restore()}drawTryInformation(){const{centerX:e,centerY:t,boardX:s,boardY:i}=this.getGlobalSize(),r=l=>l*3*this.size+e-s,n=l=>l*3*this.size+t-i+this.parent.offsetTopPx;this.ctx.fillStyle=u.DefaultText,this.ctx.fillText(`⏱️ ${V(this.parent.timer)}`,r(1.5),n(-.2)-25),this.ctx.fillText(`Lv.${this.parent.level} [ ${b[this.parent.level]} ] (${this.parent.tryAmount} / ${this.parent.tryLimit})`,r(1.5),n(-.2))}renderCanvas(e){if(this.activeValue=requestAnimationFrame(this.renderCanvas.bind(this)),e=Math.floor(e*.001),e!==this.beforeTime&&this.parent.isStateRun()&&(this.parent.timer+=1),this.parent.inputManager.resetQueue.length>0){const t=this.parent.inputManager.resetQueue.shift();if(t){const s=()=>{t.isSuccess=!1},i=setTimeout(s,3e3);this.timeoutQueue.push([i,s])}}this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(const t of this.parent.boards.flat(1))this.drawCell(t);if(0<=this.pointer.x&&this.pointer.x<this.parent.sizes.x&&0<=this.pointer.y&&this.pointer.y<this.parent.sizes.y&&this.drawGuideline(this.pointer,u.LineHighlight),this.parent.wrongCell){const{x:t,y:s}=this.parent.wrongCell;this.drawGuideline({x:t,y:s},u.DangerHighlight)}this.drawBoxBorder(),this.drawTryInformation(),this.beforeTime=e}render(){this.parent.wrongCell=null,this.activeValue=requestAnimationFrame(this.renderCanvas.bind(this))}}const f={Running:"running",Hold:"hold",Init:"init",End:"end"};class U{constructor(){a(this,"offsetTop",.1);a(this,"offsetTopPx",110);a(this,"selected",null);a(this,"wrongCell",null);a(this,"state",f.Init);a(this,"boards",[]);a(this,"sizes",{x:9,y:9});a(this,"tryAmount",0);a(this,"tryLimit",5);a(this,"level",0);a(this,"minLevel",0);a(this,"maxLevel",3);a(this,"hints",5);a(this,"timer",0);a(this,"histories",[]);a(this,"currentHistory",null);a(this,"inputManager");a(this,"renderer");this.inputManager=new $(this),this.renderer=new W(this)}showHint(){if(this.hints>0){const[e]=this.createRandomFixedCells(1);if(e.isStateFixed()){this.showHint();return}e.stateFixed(),this.hints-=1,this.renderer.updateHint()}}addHistory(){this.currentHistory!==null&&(this.currentHistory.playTime=this.timer,this.currentHistory.score=0,this.histories.push(this.currentHistory)),this.currentHistory=new Y}calculateEachValueAmount(){const e=this.inputManager.inputs.slice(1);this.inputManager.clearCount(),this.boards.flat(1).forEach(t=>{if(t.guessValue===0)return;e[t.guessValue-1].count()})}isGameClear(){const e=this.inputManager.inputs.slice(1);let t=e.length>0;for(const s of e)if(s.current!==0){t=!1;break}return t}isGameFail(){return this.tryAmount>=this.tryLimit}checkGameClear(){this.isGameClear()&&(this.end(),setTimeout(()=>{alert("게임에서 승리했습니다!"),this.showHistory(),this.levelChangeAndRestartGame()},1e3))}askSetLevel(){let e=!1,t=!1;for(;;){const s=prompt(`난이도를 변경하시겠습니까? 현재 난이도는 ${b[this.level]}입니다.
난이도는 다음과 같습니다.

0 - 처음하는 사람
1 - 초급자
2 - 중급자
3 - 고급자
`.trim());switch(s){case"0":case"1":case"2":case"3":{this.level===+s?alert("같은 레벨로 진행합니다!"):alert(`${b[s]} 단계로 진행합니다!`),this.level=+s,e=!0,t=!0;break}case null:{e=!0;break}default:{alert("정해진 난이도를 선택해주세요. 취소를 누르시면 다시 게임으로 돌아갑니다.");break}}if(e)break}return t}levelChangeAndRestartGame(){this.askSetLevel(),this.restartGame()}restartGame(){this.init(),this.running(),this.createMap(),this.calculateEachValueAmount(),this.renderer.renderInputs(),this.renderer.render()}createRandomFixedCells(e){const t=this.boards.flat(1),s=new Map,i=this.sizes.x*this.sizes.y;for(;s.size<(e>i?i:e||0);){const r=Math.floor(Math.random()*t.length),n=t[r];s.has(n.id)||s.set(n.id,{x:n.x,y:n.y})}return t.filter(r=>[...s.keys()].includes(r.id))}createRandomBaseArray(){const e=[];let t=6;for(;e.length<9;){const s=(Math.floor(Math.random()*3)+t)%9+1;e.includes(s)||e.push(s),(e.length===3||e.length===6)&&(t+=3)}return e}createStraightOrderMap(e){const t=[],{x:s,y:i}=this.sizes;let r=e||0;for(let n=0;n<i;n++){const l=[];for(let c=0;c<s;c++,r=(r+1)%9){const h=new x(c,n,(r+Math.floor(n/3)+n*3)%9+1);l.push(h)}t.push(l)}return t}createRandomBaseOrderMap(e){const t=[],{x:s,y:i}=this.sizes;for(let r=0;r<i;r++){const n=[];for(let l=0;l<s;l++){const c=new x(l,r,(e[l]+Math.floor(r/3)+r*3)%9+1);n.push(c)}t.push(n)}return t}createMap(){this.calculateEachValueAmount();const e=5,t=this.sizes.x*this.sizes.y,s=1-this.level/e,i=Math.floor(t*s)+(this.level-e)*e;this.boards=this.createRandomBaseOrderMap(this.createRandomBaseArray());const r=this.createRandomFixedCells(i);for(const n of r){const{x:l,y:c}=n;this.selectOne(l,c).stateFixed()}}createRandomMap(){const{x:e,y:t}=this.sizes;for(let s=0;s<t;s++){const i=[];for(let r=0;r<e;r++){const n=Math.floor(Math.random()*9)+1,l=new x(r,s,n);i.push(l)}this.boards.push(i)}}init(){this.renderer.destroy(),this.state=f.Init,this.boards=[],this.selected=null,this.inputManager.clearWrongCell(),this.wrongCell=null,this.sizes={x:9,y:9},this.tryAmount=0,this.hints=5,this.inputManager.memoMode=!1,this.addHistory(),this.timer=0,this.renderer.updateHint()}setLevel(e){this.level=e>this.maxLevel?this.maxLevel:e<this.minLevel?this.minLevel:e}run(){this.init(),this.running(),this.createMap(),this.calculateEachValueAmount(),this.renderer.render(),this.renderer.renderInputs()}resumeOrpause(){this.state===f.Hold?this.running():this.state===f.Running&&(this.currentHistory&&(this.currentHistory.pauseAmount+=1),this.hold()),this.renderer.playButtonToggle(this.state)}running(){this.state=f.Running,this.inputManager.activeValue=1}hold(){this.state=f.Hold,this.inputManager.activeValue=0}end(){this.state=f.End}showHistory(){this.currentHistory&&(this.currentHistory.playTime=this.timer,this.renderer.renderEndHistory(this.currentHistory))}isStateRun(){return this.state===f.Running}isStateHold(){return this.state===f.Hold}isStateEnd(){return this.state===f.End}selectOne(e,t){var i,r;return(r=(i=this.boards)==null?void 0:i[t])==null?void 0:r[e]}selectRow(e){var t;return(t=this.boards)==null?void 0:t[e]}selectColumn(e){const t=[];for(const s of this.boards){const i=s==null?void 0:s[e];i&&t.push(i)}return t}selectBox(e,t){var n,l;const s=Math.floor(e/3)*3,i=Math.floor(t/3)*3,r=[];for(let c=i;c<i+3;c++)for(let h=s;h<s+3;h++){const p=(l=(n=this.boards)==null?void 0:n[c])==null?void 0:l[h];p&&r.push(p)}return r}isCorrect(e){const t=e.map(i=>i.guessValue).filter(i=>i!==0);let s=!1;for(const i of e)if(!(t.indexOf(i.guessValue)===t.lastIndexOf(i.guessValue))){s=!0;break}return!s}isFill(e){const t=new Array(this.sizes.x).fill(!1);return e.forEach(s=>{t[s.guessValue-1]=!0}),t.every(s=>s)}guessByCell(e){const t=this.selectRow(e.y),s=this.selectColumn(e.x),i=this.selectBox(e.x,e.y),r=this.isCorrect(t),n=this.isCorrect(s),l=this.isCorrect(i),c=this.isFill(t),h=this.isFill(s),p=this.isFill(i);return{row:t,column:s,box:i,isCorrectRow:r,isCorrectColumn:n,isCorrectBox:l,isRowFill:c,isColumnFill:h,isBoxFill:p,isCorrect:r&&n&&l,ifFill:c&&h&&p}}tryFailCount(){if(this.tryAmount+=1,this.isGameFail()){console.warn("game over!"),this.end(),setTimeout(()=>{alert("게임에서 졌습니다!"),this.showHistory(),this.levelChangeAndRestartGame()},500);return}}clearGuessPassed(){for(const e of this.boards.flat(1)){const{isCorrect:t}=this.guessByCell(e);t&&e.guessValuePassed()}}}const A=location.search,N=Object.fromEntries([...new URLSearchParams(A.startsWith("?")?A.slice(1):"level=0").entries()].map(([o,e])=>[o,Number(e)||0])),H=new U;H.setLevel(N.level);H.run();
